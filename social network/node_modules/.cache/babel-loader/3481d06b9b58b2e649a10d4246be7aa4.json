{"ast":null,"code":"import _defineProperty from \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\computer science\\\\NodeJS\\\\social network\\\\src\\\\pages\\\\Auth\\\\Login.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { Component } from 'react';\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loginForm: {\n        email: {\n          value: '',\n          valid: false,\n          touched: false,\n          validators: [required, email]\n        },\n        password: {\n          value: '',\n          valid: false,\n          touched: false,\n          validators: [required, length({\n            min: 5\n          })]\n        },\n        formIsValid: false\n      }\n    };\n\n    _this.inputChangeHandler = function (input, value) {\n      _this.setState(function (prevState) {\n        var isValid = true;\n\n        var _iterator = _createForOfIteratorHelper(prevState.loginForm[input].validators),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var validator = _step.value;\n            isValid = isValid && validator(value);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var updatedForm = _objectSpread({}, prevState.loginForm, _defineProperty({}, input, _objectSpread({}, prevState.loginForm[input], {\n          valid: isValid,\n          value: value\n        })));\n\n        var formIsValid = true;\n\n        for (var inputName in updatedForm) {\n          formIsValid = formIsValid && updatedForm[inputName].valid;\n        }\n\n        return {\n          loginForm: updatedForm,\n          formIsValid: formIsValid\n        };\n      });\n    };\n\n    _this.inputBlurHandler = function (input) {\n      _this.setState(function (prevState) {\n        return {\n          loginForm: _objectSpread({}, prevState.loginForm, _defineProperty({}, input, _objectSpread({}, prevState.loginForm[input], {\n            touched: true\n          })))\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Auth, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.props.onLogin(e, {\n            email: _this2.state.loginForm.email.value,\n            password: _this2.state.loginForm.password.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"email\",\n        label: \"Your E-Mail\",\n        type: \"email\",\n        control: \"input\",\n        onChange: this.inputChangeHandler,\n        onBlur: this.inputBlurHandler.bind(this, 'email'),\n        value: this.state.loginForm['email'].value,\n        valid: this.state.loginForm['email'].valid,\n        touched: this.state.loginForm['email'].touched,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        control: \"input\",\n        onChange: this.inputChangeHandler,\n        onBlur: this.inputBlurHandler.bind(this, 'password'),\n        value: this.state.loginForm['password'].value,\n        valid: this.state.loginForm['password'].valid,\n        touched: this.state.loginForm['password'].touched,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        design: \"raised\",\n        type: \"submit\",\n        loading: this.props.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, \"Login\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["D:/computer science/NodeJS/social network/src/pages/Auth/Login.js"],"names":["React","Component","Input","Button","required","length","email","Auth","Login","state","loginForm","value","valid","touched","validators","password","min","formIsValid","inputChangeHandler","input","setState","prevState","isValid","validator","updatedForm","inputName","inputBlurHandler","e","props","onLogin","bind","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}